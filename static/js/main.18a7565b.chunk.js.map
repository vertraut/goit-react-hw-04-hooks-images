{"version":3,"sources":["Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/Button/Button.js","Components/Modal/Modal.js","Services/pixabay-api.js","Components/Loader/Loader.js","Components/ImageGallery/ImageGallery.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","onSubmit","useState","value","setValue","className","e","preventDefault","msg","normalizedValue","trim","toLocaleLowerCase","toast","error","type","autoComplete","autoFocus","placeholder","onChange","target","ImageGalleryItem","img","alt","onClick","largeImg","src","Button","action","modalRoot","document","querySelector","Modal","handleKeyDown","key","props","handleBackDropClick","currentTarget","window","addEventListener","this","removeEventListener","createPortal","Component","fetchImages","query","page","perPage","url","console","log","fetch","then","r","ok","json","Promise","reject","Error","Loader","size","color","height","width","timeout","ImageGallery","status","setStatus","pageIncrement","images","currentPage","setImages","setError","loadingMore","setLoadingMore","openModal","setOpenModal","setlargeImg","showBtnShowMore","setShowBtnShowMore","isFirstRender","useRef","useEffect","apiServices","total","hits","catch","finally","scroll","current","toggleModal","scrollTo","top","documentElement","scrollHeight","behavior","prevState","LoadMore","galleryMarkup","map","webformatURL","largeImageURL","tags","id","btnLoadingMoreMarkup","length","galleryGeneration","App","setCurrentPage","setQuery","newQuery","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.18a7565b.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [value, setValue] = useState('');\r\n\r\n  const errToast = msg => toast.error(msg);\r\n\r\n  const handleChange = e => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const clearStateValue = () => setValue('');\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const normalizedValue = value.trim().toLocaleLowerCase();\r\n    if (normalizedValue === '') {\r\n      errToast('Введите запрос');\r\n      return;\r\n    }\r\n    onSubmit(normalizedValue);\r\n    clearStateValue();\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={value}\r\n          onChange={handleChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nexport default function ImageGalleryItem({ img, alt, onClick, largeImg }) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={img}\r\n        alt={alt}\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={() => onClick({ alt, largeImg })}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  img: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  largeImg: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Button({ action }) {\r\n  return (\r\n    <div className=\"LoadMore\">\r\n      <button className=\"Button\" onClick={action}>\r\n        Load more\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  action: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.key === 'Escape') this.props.onClick();\r\n  };\r\n\r\n  handleBackDropClick = e => {\r\n    if (e.target === e.currentTarget) this.props.onClick();\r\n  };\r\n\r\n  render() {\r\n    const { src, alt } = this.props;\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackDropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={src} alt={alt} />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n};\r\n","const BASE_URL = 'https://pixabay.com/api/';\r\nconst KEY = '19101483-97eb89a6c64111aa623235b5f';\r\n\r\nfunction fetchImages(query, page, perPage) {\r\n  const url = `${BASE_URL}?q=${query}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=${perPage}`;\r\n  console.log(url);\r\n\r\n  return fetch(url).then(r => {\r\n    if (r.ok) {\r\n      return r.json();\r\n    }\r\n    return Promise.reject(new Error('Ничего не найдено'));\r\n  });\r\n}\r\n\r\nexport default fetchImages;\r\n","import PropTypes from 'prop-types';\r\nimport Spinner from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nimport React from 'react';\r\n\r\nexport default function Loader({ size }) {\r\n  return (\r\n    <div className=\"Loader\">\r\n      <Spinner\r\n        type=\"Bars\"\r\n        color=\"#3F51B5\"\r\n        height={size}\r\n        width={size}\r\n        timeout={3000} //3 secs\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nLoader.propTypes = { size: PropTypes.number.isRequired };\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport Button from '../Button';\r\nimport Modal from '../Modal';\r\nimport apiServices from '../../Services/pixabay-api';\r\nimport Loader from '../Loader';\r\nexport default function ImageGallery({\r\n  query,\r\n  status,\r\n  setStatus,\r\n  pageIncrement,\r\n  images,\r\n  currentPage,\r\n  setImages,\r\n}) {\r\n  const [error, setError] = useState(null);\r\n  const [loadingMore, setLoadingMore] = useState(false);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [largeImg, setlargeImg] = useState({});\r\n  const [showBtnShowMore, setShowBtnShowMore] = useState(true);\r\n  const isFirstRender = useRef(true);\r\n  const perPage = 12;\r\n\r\n  useEffect(() => {\r\n    //проверяем, если запрос пустой, выходим\r\n    if (query === '') return;\r\n    //Делаем запрос\r\n    if (currentPage === 1) setStatus('pending');\r\n    setShowBtnShowMore(true);\r\n    apiServices(query, currentPage, perPage)\r\n      .then(images => {\r\n        //если число уже отображаемых картинок больше или равно общему\r\n        //количеству элементов по запросу, то отключаем кнопку \"loadMore\"\r\n        if (currentPage * perPage >= images.total) {\r\n          setShowBtnShowMore(false);\r\n        }\r\n        setImages(images.hits);\r\n        setStatus('resolved');\r\n      })\r\n      .catch(error => {\r\n        setError({ error });\r\n        setStatus('rejected');\r\n      })\r\n      .finally(() => {\r\n        if (loadingMore) {\r\n          scroll();\r\n          setLoadingMore(false);\r\n        }\r\n      });\r\n  }, [query, currentPage]);\r\n\r\n  useEffect(() => {\r\n    if (isFirstRender.current) {\r\n      isFirstRender.current = false;\r\n      return;\r\n    }\r\n    console.log(largeImg);\r\n    toggleModal();\r\n  }, [largeImg]);\r\n\r\n  const scroll = () => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  function toggleModal() {\r\n    setOpenModal(prevState => !prevState);\r\n  }\r\n\r\n  const LoadMore = () => {\r\n    setLoadingMore(true);\r\n    pageIncrement();\r\n  };\r\n\r\n  const galleryGeneration = () => {\r\n    const galleryMarkup = (\r\n      <ul className=\"ImageGallery\">\r\n        {images.map(img => (\r\n          <ImageGalleryItem\r\n            key={img.id}\r\n            img={img.webformatURL}\r\n            largeImg={img.largeImageURL}\r\n            alt={img.tags}\r\n            onClick={setlargeImg}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n    const btnLoadingMoreMarkup = (\r\n      <>\r\n        {!loadingMore && <Button action={LoadMore} />}\r\n        {loadingMore && <Loader size={50} />}\r\n      </>\r\n    );\r\n\r\n    if (images.length > 0) {\r\n      return (\r\n        <>\r\n          {galleryMarkup}\r\n          {showBtnShowMore && btnLoadingMoreMarkup}\r\n        </>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"MsgNothing\">По вашему запросу ничего не найдено!</div>\r\n    );\r\n  };\r\n\r\n  if (status === 'idle') {\r\n    return <div></div>;\r\n  }\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <div>\r\n        <Loader size={150} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (status === 'rejected') {\r\n    return <div>{`Возникла ошибка ${error}`}</div>;\r\n  }\r\n\r\n  if (status === 'resolved') {\r\n    return (\r\n      <div>\r\n        {openModal && (\r\n          <Modal\r\n            onClick={toggleModal}\r\n            src={largeImg.largeImg}\r\n            alt={largeImg.alt}\r\n          />\r\n        )}\r\n        {galleryGeneration()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  query: PropTypes.string.isRequired,\r\n  status: PropTypes.string.isRequired,\r\n  setStatus: PropTypes.func.isRequired,\r\n  pageIncrement: PropTypes.func.isRequired,\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({ id: PropTypes.number.isRequired }),\r\n  ).isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  setImages: PropTypes.func.isRequired,\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport Searchbar from './Components/Searchbar';\r\nimport ImageGallery from './Components/ImageGallery';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nexport default function App() {\r\n  const [images, setImages] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [query, setQuery] = useState('');\r\n  const [status, setStatus] = useState('idle');\r\n\r\n  const pageIncrement = () => {\r\n    //увеличивает страницу при нажатии на кнопку \"показать еще\"\r\n    setCurrentPage(prevState => prevState + 1);\r\n  };\r\n\r\n  const setNewQuery = newQuery => {\r\n    if (query === newQuery) return;\r\n    setCurrentPage(1);\r\n    setImages([]);\r\n    setQuery(newQuery);\r\n  };\r\n\r\n  const addImages = images => {\r\n    //добавляет новые изображения в стейт с сохранением предыдущего значения\r\n    setImages(prevState => [...prevState, ...images]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Searchbar onSubmit={setNewQuery} />\r\n\r\n      <ImageGallery\r\n        query={query}\r\n        status={status}\r\n        setStatus={setStatus}\r\n        pageIncrement={pageIncrement}\r\n        images={images}\r\n        currentPage={currentPage}\r\n        setImages={addImages}\r\n      />\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}